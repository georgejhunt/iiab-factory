#!/bin/bash -x
# Create a USB stick to double boot in 32bit (maybe 64bit) tiny core linux
# For the purpose of duplicating rpi SD cards on a windows laptop

#Copyright George Hunt @ georgejhunt@gmail.com
# attributioon James Camron http://dev.laptop.org/git/users/quozl/mktinycorexo/

PERSIST=/opt/cache/tce
ARCH=x86
CORE_VERSION=9.x
mkdir -p $PERSIST
if [ $(id -u) = "0" ]; then
   echo This script should be run as user tc
   exit 1
fi
tce-load -wi dosfstools e2fsprogs

efi=sdc2
ext=sdc3
work=sdc4
sudo umount /mnt/$efi
sudo umount /mnt/$ext
sudo umount /mnt/$work

function p_begin {
    if [ "$COLOUR" = "yes" ]; then
        echo -ne "\e[1;96m$1\e[0;39m"
    else
        echo -n "$1"
    fi
}

function p_end {
    if [ "$COLOUR" = "yes" ]; then
        echo -e "\e[1;92m$1\e[0;39m"
    else
        echo "$1"
    fi
}

sudo fdisk /dev/sdc << EOF
d

d

d

d


n
p
1
2048
+1M
n
p
2

+20M
n
p
3

+500M
n
p
4

+50M
t
1
4
t
2
1
t
3
20
w
EOF

sleep 5
sudo partprobe /dev/sdc

sudo mkfs.vfat /dev/$efi
sudo mke2fs -t ext2 -L tcore  -F /dev/$ext
sudo mke2fs -t ext2 -L data  -F /dev/$work

uuid=$(blkid /dev/$ext | cut -d'"' -f4)
echo $uuid

tce-load -i grub2-multi
sudo mount /dev/$efi /mnt/$efi
sudo mount /dev/$ext /mnt/$ext

sudo grub-install -s --target=x86_64-efi --boot-directory=/mnt/$efi/EFI/BOOT --efi-directory=/mnt/$efi --removable --directory=/usr/local/lib/grub/i386-efi/
if [ $? -ne 0 ];then exit 1;fi
sudo grub-install --target=i386-pc --boot-directory=/mnt/$efi/EFI/BOOT /dev/sdc
if [ $? -ne 0 ];then exit 1;fi

cat grub.cfg | sed -e "s/IIAB_TOKEN/$uuid/g" | sudo tee /mnt/$efi/EFI/BOOT/grub/grub.cfg

sudo mkdir -p /mnt/$ext/boot
sudo mkdir -p /mnt/$ext/tce/optional
sudo mkdir -p /mnt/$ext/opt/iiab
sudo mkdir -p /mnt/$ext/home

pushd /mnt/$ext/boot
sudo wget http://tinycorelinux.net/9.x/x86/release/distribution_files/vmlinuz
#sudo wget http://tinycorelinux.net/9.x/x86/release/distribution_files/vmlinuz64
sudo wget http://tinycorelinux.net/9.x/x86/release/distribution_files/rootfs.gz
sudo wget http://tinycorelinux.net/9.x/x86/release/distribution_files/modules.gz
#sudo wget http://tinycorelinux.net/9.x/x86/release/distribution_files/modules64.gz
popd

sudo cp iiab.lst /mnt/$ext/tce/

sudo cp /mnt/sdb2/tce/mydata.tgz /mnt/$ext/tce/mydata.tgz
sudo cp -r /mnt/sdb2/opt /mnt/$ext/
sudo cp -f load.sh /mnt/$ext/tce
if [ ! -d /mnt/$ext/opt/iiab/iiab-factory ]; then
   pushd /mnt/$ext/opt/iiab
      sudo git clone https://github.com/iiab/iiab-factory
   popd
fi

PERSIST=/opt/cache/tce
sudo mkdir -p "$PERSIST/optional"
ARCH=x86
CORE_VERSION=9.x

sudo chmod 775 -R "$PERSIST"
    # download tiny core extension
sudo cat <<EOF > "$PERSIST/onboot.lst"
Xvesa.tcz
aterm.tcz
flwm_topside.tcz
wbar.tcz
flwm_topside.tcz
wifi.tcz
wl-modules-4.14.10-tinycore.tcz
iw.tcz
pci-utils.tcz
firmware-atheros.tcz
firmware-broadcom_bcm43xx.tcz
firmware-broadcom_bnx2.tcz
firmware-broadcom_bnx2x.tcz
firmware-getB43.tcz
firmware-ipw2100.tcz
firmware-ipw2200.tcz
firmware-iwimax.tcz
firmware-iwl8000.tcz
firmware-iwl9000.tcz
firmware-iwlwifi.tcz
firmware-marvel.tcz
firmware-myri10ge.tcz
firmware-netxen.tcz
firmware-openfwwf.tcz
firmware-ralinkwifi.tcz
firmware-rtl8192ce_se_de.tcz
firmware-rtlwifi.tcz
firmware-ti-connectivity.tcz
firmware-ueagle-atm.tcz
firmware-vxge.tcz
firmware-zd1211.tcz
firmware.tcz
git.tcz
tree.tcz
vim.tcz
bash.tcz
slocate.tcz
grub2-multi.tcz
dialog.tcz
dosfstools.tcz
util-linux.tcz
openvpn.tcz
gdisk.tcz
gzip.tcz
man.tcz
nmap.tcz
ntfs-3g.tcz
coreutils.tcz
bc.tcz
flex.tcz
nano.tcz
ncurses.tcz
ncurses-utils.tcz
nss-mdns.tcz
openssh.tcz
parted.tcz
rsync.tcz
sed.tcz
syslinux.tcz
tar.tcz
wget.tcz
xz.tcz
e2fsprogs.tcz
ntfsprogs.tcz
usbutils.tcz
rsync.tcz
grep.tcz
appbrowser-cli.tcz
EOF

# wait for the new file to be available
sudo sync
get_tce_file(){
    if [ ! -f $1 ]; then
        sudo wget ${flags} ${base}/${ARCH}/tcz/$1  \
        sudo wget ${flags} ${base}/${ARCH}/tcz/$1.md5.txt  \
        sudo wget ${flags} ${base}/${ARCH}/tcz/$1.dep  \
	for dep in `cat $1.dep`; do
 		get_tce_file $dep
	done
        p_end "got $file"
    else
        if [ $CACHE = no ]; then
            sudo rm -f $1.md5.txt
            sudo wget ${flags} ${base}/${ARCH}/tcz/$1.md5.txt  
            if [ "$(cat $1.md5.txt | cut -f 1 -d ' ')" \
                != "$(md5sum $1 | cut -f 1 -d ' ')" ]; then
                sudo rm -f $1{,.dep}
                sudo wget ${flags} ${base}/${ARCH}/tcz/$1  \
                sudo wget ${flags} ${base}/${ARCH}/tcz/$1.dep \
		for dep in `cat $1.dep`; do
			get_tce_file $dep
		done
                p_end "updated $1"
            fi
        fi
    fi
}

p_begin "Checking Tiny Core extensions ... "
base=http://repo.tinycorelinux.net/${CORE_VERSION}
cd $PERSIST/optional
flags="-q -c "
for file in $(<${PERSIST}/onboot.lst); do
   get_tce_file $file
done
p_end "ok"

sudo cp -rp $PERSIST/optional/* /mnt/$ext/tce/optional/

