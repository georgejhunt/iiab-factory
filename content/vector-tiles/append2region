#!/bin/bash -x
# Combine vector data in mbtiles format

# Inserts all tiles from [source] into [dest], replacing any old tiles
# in [dest].

CWD=$(pwd)
SOURCEDIR=$CWD
case $1 in
   "-d" | "--dir")
      SOURCEDIR=$2
      cd $SOURCEDIR
      shift 2
      ;;
esac
SOURCE=$1
DEST=$2
if [ -z "$SOURCE" ] || [ -z "$DEST" ]; then
    echo "usage: append2region [directory containing source mbtiles] [dest]" 
    exit 1
fi

if [ ! -f $SOURCE ] && [ ! -d $SOURCE ]; then
    echo "File/directory '$SOURCE' does not exist."
    exit 1
fi

# is the output filename full path?
LEADER=${DEST:0:1}
if [ "$LEADER" != "/" ];then
   mkdir -p output
   DEST=$SOURCEDIR/output/$DEST
fi
   
# does the target mbtile already exist?
if [ ! -f $DEST ]; then
   # copy the SOURCE to the output folder
   if [ -f $SOURCE ];then
      cp $SOURCE $DEST
   else
      mbtfile=`ls *.mbtiles 2>/dev/null | head -n1`
      if [ -z "$mbtfile" ];then
         echo "no mbtiles found"
         exit 1
      fi
      cp $mbtfile $DEST
      DEST=$DEST/$mbtfile
   fi   
fi

for f in `ls $SOURCEDIR/*.mbtiles`;do
   if [ "$(basename $f)" == "$(basename $DEST)" ];then
	continue
   fi

   echo "append2region $f => $DEST ..."

echo "
PRAGMA journal_mode=PERSIST;
PRAGMA page_size=80000;
PRAGMA synchronous=OFF;
ATTACH DATABASE '$f' AS source;
REPLACE INTO map SELECT * FROM source.map;
REPLACE INTO images SELECT * FROM source.images;"\
| sqlite3 $DEST
done

# all done return to original directory
cd $CWD
